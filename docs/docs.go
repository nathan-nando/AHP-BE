// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ahp/criteria": {
            "get": {
                "description": "Get ALl Criteria Alternative",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Criteria"
                ],
                "summary": "Get All Criteria Alternative",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Criteria Alternative",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Criteria"
                ],
                "summary": "Update Criteria Alternative",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CriteriaUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/ahp/criteria/check": {
            "get": {
                "description": "Check Consistency Ratio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Criteria"
                ],
                "summary": "Check Consistency Ratio",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CheckConsistencyRatioResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/ahp/final_scores/calculate/{collection_id}": {
            "get": {
                "description": "Calculate Final Scores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Criteria"
                ],
                "summary": "Calculate Final Scores",
                "parameters": [
                    {
                        "type": "string",
                        "description": "collection_id path",
                        "name": "collection_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/ahp/final_scores/{collection_id}": {
            "get": {
                "description": "Get Final Scores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Criteria"
                ],
                "summary": "Get Final Scores",
                "parameters": [
                    {
                        "type": "string",
                        "description": "collection_id path",
                        "name": "collection_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/ahp/point/calculate/{collection_id}": {
            "get": {
                "description": "Calculate Alternative to Point",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Criteria"
                ],
                "summary": "Calculate Alternative to Point",
                "parameters": [
                    {
                        "type": "string",
                        "description": "collection_id path",
                        "name": "collection_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/ahp/scores/calculate/{collection_id}": {
            "get": {
                "description": "Calculate Scores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Criteria"
                ],
                "summary": "Calculate Scores",
                "parameters": [
                    {
                        "type": "string",
                        "description": "collection_id path",
                        "name": "collection_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/ahp/scores/{collection_id}": {
            "get": {
                "description": "Get Scores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Criteria"
                ],
                "summary": "Get Scores",
                "parameters": [
                    {
                        "type": "string",
                        "description": "collection_id path",
                        "name": "collection_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/ahp/sub-criteria": {
            "get": {
                "description": "Get All Criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SubCriteria"
                ],
                "summary": "Get All Sub Criteria",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Sub Criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SubCriteria"
                ],
                "summary": "Update Sub Criteria",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SubCriteria"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/ahp/sub-criteria/check/{mode}": {
            "get": {
                "description": "Check Consistency Ratio By MODE",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SubCriteria"
                ],
                "summary": "Check Consistency Ratio By MODE",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mode",
                        "name": "mode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/alternative": {
            "post": {
                "description": "Create alternative",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alternative"
                ],
                "summary": "Create alternative",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateAlternativeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateAlternativeResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update alternative",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alternative"
                ],
                "summary": "Update alternative",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateAlternativeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateAlternativeResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/alternative/collection/{id}": {
            "get": {
                "description": "Get All Alternatives By CollectionID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alternative"
                ],
                "summary": "Get All Alternatives By CollectionID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FindAlternativesByIDCollectionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/alternative/{id}": {
            "get": {
                "description": "Get Collection By AlternativeID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alternative"
                ],
                "summary": "Get Collection By AlternativeID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FindAlternativeByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete alternative",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alternative"
                ],
                "summary": "Delete alternative",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteAlternativeResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/collection": {
            "get": {
                "description": "Get All Collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Get All Collections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FindCollectionsResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Create collection",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCollectionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Update collection",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCollectionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/collection/{id}": {
            "get": {
                "description": "Get Collection By CollectionID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Get Collection By CollectionID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FindCollectionByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Delete collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteCollectionResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CheckConsistencyRatioResponse": {
            "type": "object",
            "properties": {
                "bool": {
                    "type": "boolean"
                }
            }
        },
        "dto.CheckConsistencyRatioResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CheckConsistencyRatioResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CreateAlternativeRequest": {
            "type": "object",
            "properties": {
                "aksesibilitas": {
                    "type": "string"
                },
                "cakupan_rumah": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "jarak_pemukiman": {
                    "type": "number"
                },
                "jarak_sungai": {
                    "type": "string"
                },
                "jarak_tpa": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "partisipasi_masyarakat": {
                    "type": "number"
                },
                "timbulan_sampah": {
                    "type": "string"
                }
            }
        },
        "dto.CreateAlternativeResponse": {
            "type": "object",
            "properties": {
                "aksesibilitas": {
                    "type": "string"
                },
                "cakupan_rumah": {
                    "type": "number"
                },
                "collection_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "final_scores": {
                    "$ref": "#/definitions/model.FinalScoreModel"
                },
                "id": {
                    "type": "string"
                },
                "jarak_pemukiman": {
                    "type": "number"
                },
                "jarak_sungai": {
                    "type": "string"
                },
                "jarak_tpa": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partisipasi_masyarakat": {
                    "type": "number"
                },
                "scores": {
                    "$ref": "#/definitions/model.ScoreModel"
                },
                "timbulan_sampah": {
                    "type": "string"
                }
            }
        },
        "dto.CreateAlternativeResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CreateAlternativeResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CreateCollectionRequest": {
            "type": "object",
            "properties": {
                "center": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "final_score_is_calculated": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "score_is_calculated": {
                    "type": "boolean"
                }
            }
        },
        "dto.CreateCollectionResponse": {
            "type": "object",
            "properties": {
                "alternatives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AlternativeModel"
                    }
                },
                "center": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "final_score_is_calculated": {
                    "type": "boolean"
                },
                "final_scores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FinalScoreModel"
                    }
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "score_is_calculated": {
                    "type": "boolean"
                },
                "scores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ScoreModel"
                    }
                }
            }
        },
        "dto.CreateCollectionResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.CreateCollectionResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.CriteriaUpdateRequest": {
            "type": "object",
            "properties": {
                "pairwise": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "dto.DeleteAlternativeResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.DeleteAlternativeResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.DeleteAlternativeResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.DeleteCollectionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.DeleteCollectionResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.DeleteCollectionResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.FindAlternativeByIDResponse": {
            "type": "object",
            "properties": {
                "aksesibilitas": {
                    "type": "string"
                },
                "cakupan_rumah": {
                    "type": "number"
                },
                "collection_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "final_scores": {
                    "$ref": "#/definitions/model.FinalScoreModel"
                },
                "id": {
                    "type": "string"
                },
                "jarak_pemukiman": {
                    "type": "number"
                },
                "jarak_sungai": {
                    "type": "string"
                },
                "jarak_tpa": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partisipasi_masyarakat": {
                    "type": "number"
                },
                "scores": {
                    "$ref": "#/definitions/model.ScoreModel"
                },
                "timbulan_sampah": {
                    "type": "string"
                }
            }
        },
        "dto.FindAlternativeByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.FindAlternativeByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.FindAlternativesByIDCollectionResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.AlternativeModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.FindCollectionByIDResponse": {
            "type": "object",
            "properties": {
                "alternatives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AlternativeModel"
                    }
                },
                "center": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "final_score_is_calculated": {
                    "type": "boolean"
                },
                "final_scores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FinalScoreModel"
                    }
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "score_is_calculated": {
                    "type": "boolean"
                },
                "scores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ScoreModel"
                    }
                }
            }
        },
        "dto.FindCollectionByIDResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.FindCollectionByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.FindCollectionsResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CollectionModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.UpdateAlternativeRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "aksesibilitas": {
                    "type": "string"
                },
                "cakupan_rumah": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "jarak_pemukiman": {
                    "type": "number"
                },
                "jarak_sungai": {
                    "type": "string"
                },
                "jarak_tpa": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "partisipasi_masyarakat": {
                    "type": "number"
                },
                "timbulan_sampah": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateAlternativeResponse": {
            "type": "object",
            "properties": {
                "aksesibilitas": {
                    "type": "string"
                },
                "cakupan_rumah": {
                    "type": "number"
                },
                "collection_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "final_scores": {
                    "$ref": "#/definitions/model.FinalScoreModel"
                },
                "id": {
                    "type": "string"
                },
                "jarak_pemukiman": {
                    "type": "number"
                },
                "jarak_sungai": {
                    "type": "string"
                },
                "jarak_tpa": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partisipasi_masyarakat": {
                    "type": "number"
                },
                "scores": {
                    "$ref": "#/definitions/model.ScoreModel"
                },
                "timbulan_sampah": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateAlternativeResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.UpdateAlternativeResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.UpdateCollectionRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "center": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "final_score_is_calculated": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "score_is_calculated": {
                    "type": "boolean"
                }
            }
        },
        "dto.UpdateCollectionResponse": {
            "type": "object",
            "properties": {
                "alternatives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AlternativeModel"
                    }
                },
                "center": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "final_score_is_calculated": {
                    "type": "boolean"
                },
                "final_scores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FinalScoreModel"
                    }
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "score_is_calculated": {
                    "type": "boolean"
                },
                "scores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ScoreModel"
                    }
                }
            }
        },
        "dto.UpdateCollectionResponseDoc": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.UpdateCollectionResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "model.Aksesibilitas": {
            "type": "object",
            "properties": {
                "layak": {
                    "type": "number"
                },
                "pairwise": {
                    "$ref": "#/definitions/model.Pairwise"
                },
                "sangat_layak": {
                    "type": "number"
                },
                "tidak_layak": {
                    "type": "number"
                }
            }
        },
        "model.AlternativeModel": {
            "type": "object",
            "properties": {
                "aksesibilitas": {
                    "type": "string"
                },
                "cakupan_rumah": {
                    "type": "number"
                },
                "collection_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "final_scores": {
                    "$ref": "#/definitions/model.FinalScoreModel"
                },
                "id": {
                    "type": "string"
                },
                "jarak_pemukiman": {
                    "type": "number"
                },
                "jarak_sungai": {
                    "type": "string"
                },
                "jarak_tpa": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partisipasi_masyarakat": {
                    "type": "number"
                },
                "scores": {
                    "$ref": "#/definitions/model.ScoreModel"
                },
                "timbulan_sampah": {
                    "type": "string"
                }
            }
        },
        "model.CakupanRumah": {
            "type": "object",
            "properties": {
                "cakupan_1": {
                    "type": "number"
                },
                "cakupan_2": {
                    "type": "number"
                },
                "cakupan_3": {
                    "type": "number"
                },
                "cakupan_4": {
                    "type": "number"
                },
                "cakupan_5": {
                    "type": "number"
                },
                "pairwise": {
                    "$ref": "#/definitions/model.Pairwise"
                }
            }
        },
        "model.CollectionModel": {
            "type": "object",
            "properties": {
                "alternatives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AlternativeModel"
                    }
                },
                "center": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "final_score_is_calculated": {
                    "type": "boolean"
                },
                "final_scores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FinalScoreModel"
                    }
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "score_is_calculated": {
                    "type": "boolean"
                },
                "scores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ScoreModel"
                    }
                }
            }
        },
        "model.FinalScoreModel": {
            "type": "object",
            "properties": {
                "alternative_id": {
                    "type": "string"
                },
                "collection_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "final_score": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                }
            }
        },
        "model.JarakPemukiman": {
            "type": "object",
            "properties": {
                "jarak_1": {
                    "type": "number"
                },
                "jarak_2": {
                    "type": "number"
                },
                "jarak_3": {
                    "type": "number"
                },
                "jarak_4": {
                    "type": "number"
                },
                "jarak_5": {
                    "type": "number"
                },
                "pairwise": {
                    "$ref": "#/definitions/model.Pairwise"
                }
            }
        },
        "model.JarakSungai": {
            "type": "object",
            "properties": {
                "cukup_layak": {
                    "type": "number"
                },
                "kurang_layak": {
                    "type": "number"
                },
                "layak": {
                    "type": "number"
                },
                "pairwise": {
                    "$ref": "#/definitions/model.Pairwise"
                },
                "sangat_layak": {
                    "type": "number"
                },
                "tidak_layak": {
                    "type": "number"
                }
            }
        },
        "model.JarakTPA": {
            "type": "object",
            "properties": {
                "pairwise": {
                    "$ref": "#/definitions/model.Pairwise"
                },
                "pelayanan_intensif": {
                    "type": "number"
                },
                "pelayanan_menengah": {
                    "type": "number"
                },
                "pelayanan_rendah": {
                    "type": "number"
                }
            }
        },
        "model.Pairwise": {
            "type": "object",
            "properties": {
                "pairwise": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "pairwise_after_calculated": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "weights": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        },
        "model.PartisipasiMasyarakat": {
            "type": "object",
            "properties": {
                "pairwise": {
                    "$ref": "#/definitions/model.Pairwise"
                },
                "partisipasi_1": {
                    "type": "number"
                },
                "partisipasi_2": {
                    "type": "number"
                },
                "partisipasi_3": {
                    "type": "number"
                },
                "partisipasi_4": {
                    "type": "number"
                },
                "partisipasi_5": {
                    "type": "number"
                }
            }
        },
        "model.ScoreModel": {
            "type": "object",
            "properties": {
                "aksesibilitas": {
                    "type": "number"
                },
                "alternative_id": {
                    "type": "string"
                },
                "cakupan_rumah": {
                    "type": "number"
                },
                "collection_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "jarak_pemukiman": {
                    "type": "number"
                },
                "jarak_sungai": {
                    "type": "number"
                },
                "jarak_tpa": {
                    "type": "number"
                },
                "modified_at": {
                    "type": "string"
                },
                "modified_by": {
                    "type": "string"
                },
                "partisipasi_masyarakat": {
                    "type": "number"
                },
                "timbulan_sampah": {
                    "type": "number"
                }
            }
        },
        "model.SubCriteria": {
            "type": "object",
            "properties": {
                "aksesibilitas": {
                    "$ref": "#/definitions/model.Aksesibilitas"
                },
                "cakupan_rumah": {
                    "$ref": "#/definitions/model.CakupanRumah"
                },
                "jarak_pemukiman": {
                    "$ref": "#/definitions/model.JarakPemukiman"
                },
                "jarak_sungai": {
                    "$ref": "#/definitions/model.JarakSungai"
                },
                "jarak_tpa": {
                    "$ref": "#/definitions/model.JarakTPA"
                },
                "partisipasi_masyarakat": {
                    "$ref": "#/definitions/model.PartisipasiMasyarakat"
                },
                "timbulan_sampah": {
                    "$ref": "#/definitions/model.TimbulanSampah"
                }
            }
        },
        "model.TimbulanSampah": {
            "type": "object",
            "properties": {
                "daerah_komersil": {
                    "type": "number"
                },
                "daerah_perumahan_teratur": {
                    "type": "number"
                },
                "daerah_perumahan_tidak_teratur": {
                    "type": "number"
                },
                "industri": {
                    "type": "number"
                },
                "jalan": {
                    "type": "number"
                },
                "pairwise": {
                    "$ref": "#/definitions/model.Pairwise"
                },
                "pusat_kota": {
                    "type": "number"
                }
            }
        },
        "response.Meta": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "default": "true"
                },
                "success": {
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "response.errorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/response.Meta"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
