definitions:
  dto.CreateAlternativeRequest:
    properties:
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
    type: object
  dto.CreateAlternativeResponse:
    properties:
      collection_id:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      final_scores:
        $ref: '#/definitions/model.FinalScoreModel'
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      scores:
        $ref: '#/definitions/model.ScoreModel'
    type: object
  dto.CreateAlternativeResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.CreateAlternativeResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.CreateCollectionRequest:
    properties:
      center:
        type: number
      description:
        type: string
      final_score_is_calculated:
        type: boolean
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      score_is_calculated:
        type: boolean
    type: object
  dto.CreateCollectionResponse:
    properties:
      alternatives:
        items:
          $ref: '#/definitions/model.AlternativeModel'
        type: array
      center:
        type: number
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      final_score_is_calculated:
        type: boolean
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      score_is_calculated:
        type: boolean
    type: object
  dto.CreateCollectionResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.CreateCollectionResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.CriteriaUpdateRequest:
    properties:
      pairwise:
        items:
          items:
            type: number
          type: array
        type: array
    type: object
  dto.DeleteAlternativeResponse:
    properties:
      id:
        type: string
    type: object
  dto.DeleteAlternativeResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.DeleteAlternativeResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.DeleteCollectionResponse:
    properties:
      id:
        type: string
    type: object
  dto.DeleteCollectionResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.DeleteCollectionResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.FindAlternativeByIDResponse:
    properties:
      collection_id:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      final_scores:
        $ref: '#/definitions/model.FinalScoreModel'
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      scores:
        $ref: '#/definitions/model.ScoreModel'
    type: object
  dto.FindAlternativeByIDResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.FindAlternativeByIDResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.FindAlternativesByIDCollectionResponseDoc:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/model.AlternativeModel'
            type: array
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.FindCollectionByIDResponse:
    properties:
      alternatives:
        items:
          $ref: '#/definitions/model.AlternativeModel'
        type: array
      center:
        type: number
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      final_score_is_calculated:
        type: boolean
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      score_is_calculated:
        type: boolean
    type: object
  dto.FindCollectionByIDResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.FindCollectionByIDResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.FindCollectionsResponseDoc:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/model.CollectionModel'
            type: array
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.UpdateAlternativeRequest:
    properties:
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
    required:
    - id
    type: object
  dto.UpdateAlternativeResponse:
    properties:
      collection_id:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      final_scores:
        $ref: '#/definitions/model.FinalScoreModel'
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      scores:
        $ref: '#/definitions/model.ScoreModel'
    type: object
  dto.UpdateAlternativeResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.UpdateAlternativeResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.UpdateCollectionRequest:
    properties:
      center:
        type: number
      description:
        type: string
      final_score_is_calculated:
        type: boolean
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      score_is_calculated:
        type: boolean
    required:
    - id
    type: object
  dto.UpdateCollectionResponse:
    properties:
      alternatives:
        items:
          $ref: '#/definitions/model.AlternativeModel'
        type: array
      center:
        type: number
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      final_score_is_calculated:
        type: boolean
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      score_is_calculated:
        type: boolean
    type: object
  dto.UpdateCollectionResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.UpdateCollectionResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  model.AlternativeModel:
    properties:
      collection_id:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      final_scores:
        $ref: '#/definitions/model.FinalScoreModel'
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      scores:
        $ref: '#/definitions/model.ScoreModel'
    type: object
  model.CollectionModel:
    properties:
      alternatives:
        items:
          $ref: '#/definitions/model.AlternativeModel'
        type: array
      center:
        type: number
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      final_score_is_calculated:
        type: boolean
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      score_is_calculated:
        type: boolean
    type: object
  model.FinalScoreModel:
    properties:
      alternative_id:
        type: string
      collection_id:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      final_score:
        type: number
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      rank:
        type: integer
    type: object
  model.ScoreModel:
    properties:
      alternative_id:
        type: string
      collection_id:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
    type: object
  response.Meta:
    properties:
      message:
        default: "true"
        type: string
      success:
        default: true
        type: boolean
    type: object
  response.errorResponse:
    properties:
      error:
        type: string
      meta:
        $ref: '#/definitions/response.Meta'
    type: object
info:
  contact: {}
paths:
  /ahp/criteria:
    get:
      consumes:
      - application/json
      description: Get ALl Criteria Alternative
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Get All Criteria Alternative
      tags:
      - AHP
    patch:
      consumes:
      - application/json
      description: Update Criteria Alternative
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CriteriaUpdateRequest'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Update Criteria Alternative
      tags:
      - AHP
  /ahp/final_scores/{collection_id}:
    get:
      consumes:
      - application/json
      description: Get Final Scores
      parameters:
      - description: collection_id path
        in: path
        name: collection_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Get Final Scores
      tags:
      - AHP
  /ahp/final_scores/calculate/{collection_id}:
    get:
      consumes:
      - application/json
      description: Calculate Final Scores by Collection ID
      parameters:
      - description: collection_id path
        in: path
        name: collection_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Calculate Final Scores by Collection ID
      tags:
      - AHP
  /ahp/point/calculate/{collection_id}:
    get:
      consumes:
      - application/json
      description: Calculate Alternative to Point
      parameters:
      - description: collection_id path
        in: path
        name: collection_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Calculate Alternative to Point
      tags:
      - AHP
  /ahp/scores/{collection_id}:
    get:
      consumes:
      - application/json
      description: Get Scores By Collection ID
      parameters:
      - description: collection_id path
        in: path
        name: collection_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Get Scores By Collection ID
      tags:
      - AHP
  /ahp/scores/calculate/{collection_id}:
    get:
      consumes:
      - application/json
      description: Calculate Scores by Collection ID
      parameters:
      - description: collection_id path
        in: path
        name: collection_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Calculate Scores by Collection ID
      tags:
      - AHP
  /alternative:
    patch:
      consumes:
      - application/json
      description: Update alternative
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateAlternativeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateAlternativeResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Update alternative
      tags:
      - alternative
    post:
      consumes:
      - application/json
      description: Create alternative
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateAlternativeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateAlternativeResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Create alternative
      tags:
      - alternative
  /alternative/{id}:
    delete:
      consumes:
      - application/json
      description: Delete alternative
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DeleteAlternativeResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Delete alternative
      tags:
      - alternative
    get:
      consumes:
      - application/json
      description: Get Collection By AlternativeID
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.FindAlternativeByIDResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Get Collection By AlternativeID
      tags:
      - alternative
  /alternative/collection/{id}:
    get:
      consumes:
      - application/json
      description: Get All Alternatives By CollectionID
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.FindAlternativesByIDCollectionResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Get All Alternatives By CollectionID
      tags:
      - alternative
  /collection:
    get:
      consumes:
      - application/json
      description: Get All Collections
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.FindCollectionsResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Get All Collections
      tags:
      - collection
    patch:
      consumes:
      - application/json
      description: Update collection
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateCollectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateCollectionResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Update collection
      tags:
      - collection
    post:
      consumes:
      - application/json
      description: Create collection
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCollectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateCollectionResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Create collection
      tags:
      - collection
  /collection/{id}:
    delete:
      consumes:
      - application/json
      description: Delete collection
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DeleteCollectionResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Delete collection
      tags:
      - collection
    get:
      consumes:
      - application/json
      description: Get Collection By CollectionID
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.FindCollectionByIDResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Get Collection By CollectionID
      tags:
      - collection
swagger: "2.0"
